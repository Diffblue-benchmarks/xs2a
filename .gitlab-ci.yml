# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

cache:
  paths:
    - .m2/repository

image: "adorsys/ci-build:201907"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Compile" # build jar and provide as artifact
  - "Test"    # run tests and code quality checks
  - "Package" # dockerize jar and push to docker registry
  - "Deploy"  # push to openshift registry (snapshot deployment) or release registry

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables:
  SONAR_HOST: "https://psd2-quality.cloud.adorsys.de"

  DOCKER_IMAGE_NAME_CNT_MGMNT: "xs2a-consent-management"
  DOCKER_IMAGE_NAME_ASPSP_PROFILE: "xs2a-aspsp-profile"
  DOCKER_IMAGE_NAME_XS2A: "xs2a-service"

  ###########################
  # Public Dockerhub Images #
  ###########################

  DOCKERHUB_REGISTRY: "docker.io"

  DOCKERHUB_NAMESPACE: "adorsys"

  ############################
  # Private Openshift Images #
  ############################


  OPENSHIFT_NAMESPACE_KOA_TEST_DEPLOY_PSD2: "koa-test-deploy-psd2"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipTests clean install

.java_tests: &java_tests
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install

# Build docker images and push them to Dockerhub (depending on ${DOCKER_TAG})
.build_dockerhub_image: &build_dockerhub_image
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CNT_MGMNT}:${DOCKER_TAG}" consent-management/cms-standalone-service
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}" aspsp-profile/aspsp-profile-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A}:${DOCKER_TAG}" xs2a-standalone-starter

    - docker login -u ${DOCKER_HUB_LOGIN} -p ${DOCKER_HUB_PASS}
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CNT_MGMNT}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A}:${DOCKER_TAG}"
    - docker logout

# Copy Dockerhub images to Openshift (depending on ${DOCKER_TAG} and ${OPENSHIFT_NAMESPACE})
.deploy_openshift: &deploy_openshift
  script:
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CNT_MGMNT}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_CNT_MGMNT}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:latest"

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

Compile Java8:
  stage: "Compile"
  variables:
    JAVA_VERSION: "system@1.8"
  <<: *build_java
  artifacts:
    paths:
      - "xs2a-impl/target/aspsp-xs2a.jar"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}"
    expire_in: "10 day"

Compile Java11:
  stage: "Compile"
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *build_java
  artifacts:
    paths:
      - "xs2a-standalone-starter/target/xs2a-standalone-starter-exec.jar"
      - "consent-management/cms-standalone-service/target/consent-management*jar"
      - "aspsp-profile/aspsp-profile-server/target/aspsp-profile*jar"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

PMD Report:
  stage: "Compile"
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:pmd
  variables:
    JAVA_VERSION: "system@1.8"
  artifacts:
    paths:
    - "qa/pmd/pmd-ruleset.xml"
    - "**/**/*/pmd.html"
    - "**/*/pmd.xml"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"


DOCKER test image build:
  stage: "Test"
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CNT_MGMNT}:${DOCKER_TAG}" consent-management/cms-standalone-service
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}" aspsp-profile/aspsp-profile-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A}:${DOCKER_TAG}" xs2a-standalone-starter
  variables:
    DOCKER_TAG: koa-test-deploy
  except:
    - master-2.x
    - support-2.x

PMD Check Java8:
  stage: "Test"
  variables:
    JAVA_VERSION: "system@1.8"
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:check

PMD Check Java11:
  stage: "Test"
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:check

Doc Check Java8:
  stage: "Test"
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.8"
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc
  artifacts:
    paths:
    - "**/target/site/*"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

Doc Check Java11:
  stage: "Test"
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.11"
  script:
    - jabba use ${JAVA_VERSION}
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc

Unit Tests Java8:
  stage: "Test"
  <<: *java_tests
  variables:
    JAVA_VERSION: "system@1.8"
  artifacts:
    paths:
    - "**/target/surefire-reports/*"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

Unit Tests Java11:
  stage: "Test"
  <<: *java_tests
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

Sonarcube Tests:
  stage: "Test"
  only:
    - koa-test-deploy-psd2
  script:
    - jabba use system@1.8
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
    - mvn sonar:sonar -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=${SONAR_TOKEN}

AsciiDoc Test:
  stage: "Test"
  image: adorsys/arc42-tools
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  script:
    - make pages

# Build DEVELOP image and deploy to DEV

Push to DockerHub (develop):
  stage: "Package"
  only:
    - koa-test-deploy-psd2
  variables:
    DOCKER_TAG: koa-test-deploy
  <<: *build_dockerhub_image

Deploy to Openshift (develop):
  stage: "Deploy"
  cache: {}
  only:
    - koa-test-deploy-psd2
  variables:
    DOCKER_TAG: koa-test-deploy # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_KOA_TEST_DEPLOY_PSD2} # Openshift target namespace
  <<: *deploy_openshift

